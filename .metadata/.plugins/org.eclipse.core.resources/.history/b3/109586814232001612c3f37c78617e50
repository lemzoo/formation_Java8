/**
 * 
 */
package com.company.tp.formulaire;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.LayoutManager;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;



/**
 * Classe Formulaire 
 * @author Lamine BA
 *
 */
public class Formulaire extends JFrame{
	
	private JLabel labelTitre, labelNom, labelPrenom, labelAdresse; 
	
	private JTextField jtxtNom, jtxtPrenom; 
	
	private JTextArea jtxtareaAdresse;
	
	private static final String[] valeur = {"Mr", "Mme", "Mlle"};
	
	private JComboBox jcbxTitre = new JComboBox(valeur);
	
	private JButton btnOk, btnAnnuler; 
	
	public Formulaire (){
		this.setTitle("Formulaire d'inscription");
		
		//On instancie les labels et le jtxt
		labelTitre = new JLabel("Titre");
		labelNom = new JLabel("Nom : "); 
		labelPrenom = new JLabel("Prenom : "); 
		labelAdresse = new JLabel("Adresse : "); 
		
		jtxtNom = new JTextField(10);
		jtxtPrenom = new JTextField(10);
		jtxtareaAdresse = new JTextArea(4,20);
		
		btnOk = new JButton("OK");
		btnAnnuler = new JButton("Annuler");
		
		/*
		 * On va créer un JPanel auquel on va affecter un GridLayout
		 * pour contenir 4 JLabel qui vont etre les designations (Libellé)
		 * des champs définis plus haut
		 */
		JPanel designation = new JPanel(); 
		
		/*
		 * Pour un JPanel qui est un container comme le container d'un JFrame
		 * que l'on recupere avec getContentPane(), on peut associer un layout directement
		 */
		designation.setLayout(new GridLayout(4, 1,5,5));
		
		designation.add(labelTitre);
		designation.add(labelNom); 
		designation.add(labelPrenom);
		designation.add(labelAdresse);
		
		JPanel champ = new JPanel(); 
		/*
		 * On crée un deuxième GgridLayout qui permettra d'insérer
		 * cette fois-ci les champs correspondants
		 */
		champ.setLayout(new GridLayout(3, 1,5,5));
		
		champ.add(jcbxTitre);
		champ.add(jtxtNom);
		champ.add(jtxtPrenom);
		
		/*
		 * On crée un troisieme GgridLayout qui permettra d'insérer
		 * cette fois-ci des boutons
		 */
		JPanel panelBouton = new JPanel(); 
		panelBouton.setLayout(new GridLayout(1,2,5,5));
		
		panelBouton.add(btnOk);
		panelBouton.add(btnAnnuler);
		
		Container container = this.getContentPane();
		container.setLayout(new GridBagLayout());
		
		/* Le gridBagConstraints va définir la position et la taille des éléments */
		GridBagConstraints gc = new GridBagConstraints();
		
		/* le parametre fill sert à définir comment le composant sera rempli GridBagConstraints.BOTH permet d'occuper tout l'espace disponible
		 * horizontalement et verticalement GridBagConstraints.HORIZONTAL maximise horizontalement GridBagConstraints.VERTICAL maximise verticalement
		 */
		gc.fill = GridBagConstraints.BOTH;
		
		/* insets définir la marge entre les composant new Insets(margeSupérieure, margeGauche, margeInférieur, margeDroite) */
		gc.insets = new Insets(3, 3, 3, 3);
		
		/* ipady permet de savoir où on place le composant s'il n'occupe pas la totalité de l'espace disponnible */
		gc.ipady = gc.anchor = GridBagConstraints.CENTER;
		
		/* weightx définit le nombre de cases en abscisse */
		gc.weightx = 3;
		
		/* weightx définit le nombre de cases en ordonnée */
		gc.weighty = 2;
		
		/* pour dire qu'on ajoute un composant en position (i, j), on définit gridx=i et gridy=j */
		gc.gridx = 0;
		gc.gridy = 0;
		
		/* On ajoute le composant au panel en précisant le GridBagConstraints */
		container.add(designation, gc);
		
		//On rajoute d'abord la désignation en le positionnant à WEST
		//container.add(designation, BorderLayout.WEST);
		
		gc.gridx = 1;
		gc.gridy = 0;
		container.add(champ, gc);
		
		//On rajoute ensuite champ en le positionnant à CENTER
		//container.add(champ,  BorderLayout.CENTER); 
		
		gc.gridx = 1;
		gc.gridy = 0;
		container.add(jtxtareaAdresse, gc);
		
		//On rajoute enfin adresse en le positionnant à SOUTH
		//container.add(jtxtareaAdresse, BorderLayout.SOUTH);
		
		gc.gridx = 2;
		gc.gridy = 0;
		container.add(panelBouton, gc);
		
		// On rajoute en dessous les deux boutons
		//container.add(panelBouton);
		
		//On dispose les différents objets sur le formulaire
		this.pack();

	}

	public static void main(String[] args) {
		Formulaire monFormulaire = new Formulaire();
		monFormulaire.setVisible(true);
	}
}
